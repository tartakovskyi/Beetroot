"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _jquery=_interopRequireDefault(require("jquery")),_util=_interopRequireDefault(require("./util"));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function _objectSpread(t){for(var e=1;e<arguments.length;e++){var i=null!=arguments[e]?arguments[e]:{},n=Object.keys(i);"function"==typeof Object.getOwnPropertySymbols&&(n=n.concat(Object.getOwnPropertySymbols(i).filter(function(e){return Object.getOwnPropertyDescriptor(i,e).enumerable}))),n.forEach(function(e){_defineProperty(t,e,i[e])})}return t}function _defineProperty(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,t){for(var i=0;i<t.length;i++){var n=t[i];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function _createClass(e,t,i){return t&&_defineProperties(e.prototype,t),i&&_defineProperties(e,i),e}var NAME="carousel",VERSION="4.2.1",DATA_KEY="bs.carousel",EVENT_KEY=".".concat(DATA_KEY),DATA_API_KEY=".data-api",JQUERY_NO_CONFLICT=_jquery.default.fn[NAME],ARROW_LEFT_KEYCODE=37,ARROW_RIGHT_KEYCODE=39,TOUCHEVENT_COMPAT_WAIT=500,SWIPE_THRESHOLD=40,Default={interval:5e3,keyboard:!0,slide:!1,pause:"hover",wrap:!0,touch:!0},DefaultType={interval:"(number|boolean)",keyboard:"boolean",slide:"(boolean|string)",pause:"(string|boolean)",wrap:"boolean",touch:"boolean"},Direction={NEXT:"next",PREV:"prev",LEFT:"left",RIGHT:"right"},Event={SLIDE:"slide".concat(EVENT_KEY),SLID:"slid".concat(EVENT_KEY),KEYDOWN:"keydown".concat(EVENT_KEY),MOUSEENTER:"mouseenter".concat(EVENT_KEY),MOUSELEAVE:"mouseleave".concat(EVENT_KEY),TOUCHSTART:"touchstart".concat(EVENT_KEY),TOUCHMOVE:"touchmove".concat(EVENT_KEY),TOUCHEND:"touchend".concat(EVENT_KEY),POINTERDOWN:"pointerdown".concat(EVENT_KEY),POINTERUP:"pointerup".concat(EVENT_KEY),DRAG_START:"dragstart".concat(EVENT_KEY),LOAD_DATA_API:"load".concat(EVENT_KEY).concat(DATA_API_KEY),CLICK_DATA_API:"click".concat(EVENT_KEY).concat(DATA_API_KEY)},ClassName={CAROUSEL:"carousel",ACTIVE:"active",SLIDE:"slide",RIGHT:"carousel-item-right",LEFT:"carousel-item-left",NEXT:"carousel-item-next",PREV:"carousel-item-prev",ITEM:"carousel-item",POINTER_EVENT:"pointer-event"},Selector={ACTIVE:".active",ACTIVE_ITEM:".active.carousel-item",ITEM:".carousel-item",ITEM_IMG:".carousel-item img",NEXT_PREV:".carousel-item-next, .carousel-item-prev",INDICATORS:".carousel-indicators",DATA_SLIDE:"[data-slide], [data-slide-to]",DATA_RIDE:'[data-ride="carousel"]'},PointerType={TOUCH:"touch",PEN:"pen"},Carousel=function(){function a(e,t){_classCallCheck(this,a),this._items=null,this._interval=null,this._activeElement=null,this._isPaused=!1,this._isSliding=!1,this.touchTimeout=null,this.touchStartX=0,this.touchDeltaX=0,this._config=this._getConfig(t),this._element=e,this._indicatorsElement=this._element.querySelector(Selector.INDICATORS),this._touchSupported="ontouchstart"in document.documentElement||0<navigator.maxTouchPoints,this._pointerEvent=Boolean(window.PointerEvent||window.MSPointerEvent),this._addEventListeners()}return _createClass(a,[{key:"next",value:function(){this._isSliding||this._slide(Direction.NEXT)}},{key:"nextWhenVisible",value:function(){!document.hidden&&(0,_jquery.default)(this._element).is(":visible")&&"hidden"!==(0,_jquery.default)(this._element).css("visibility")&&this.next()}},{key:"prev",value:function(){this._isSliding||this._slide(Direction.PREV)}},{key:"pause",value:function(e){e||(this._isPaused=!0),this._element.querySelector(Selector.NEXT_PREV)&&(_util.default.triggerTransitionEnd(this._element),this.cycle(!0)),clearInterval(this._interval),this._interval=null}},{key:"cycle",value:function(e){e||(this._isPaused=!1),this._interval&&(clearInterval(this._interval),this._interval=null),this._config.interval&&!this._isPaused&&(this._interval=setInterval((document.visibilityState?this.nextWhenVisible:this.next).bind(this),this._config.interval))}},{key:"to",value:function(e){var t=this;this._activeElement=this._element.querySelector(Selector.ACTIVE_ITEM);var i=this._getItemIndex(this._activeElement);if(!(e>this._items.length-1||e<0))if(this._isSliding)(0,_jquery.default)(this._element).one(Event.SLID,function(){return t.to(e)});else{if(i===e)return this.pause(),void this.cycle();var n=i<e?Direction.NEXT:Direction.PREV;this._slide(n,this._items[e])}}},{key:"dispose",value:function(){(0,_jquery.default)(this._element).off(EVENT_KEY),_jquery.default.removeData(this._element,DATA_KEY),this._items=null,this._config=null,this._element=null,this._interval=null,this._isPaused=null,this._isSliding=null,this._activeElement=null,this._indicatorsElement=null}},{key:"_getConfig",value:function(e){return e=_objectSpread({},Default,e),_util.default.typeCheckConfig(NAME,e,DefaultType),e}},{key:"_handleSwipe",value:function(){var e=Math.abs(this.touchDeltaX);if(!(e<=SWIPE_THRESHOLD)){var t=e/this.touchDeltaX;0<t&&this.prev(),t<0&&this.next()}}},{key:"_addEventListeners",value:function(){var t=this;this._config.keyboard&&(0,_jquery.default)(this._element).on(Event.KEYDOWN,function(e){return t._keydown(e)}),"hover"===this._config.pause&&(0,_jquery.default)(this._element).on(Event.MOUSEENTER,function(e){return t.pause(e)}).on(Event.MOUSELEAVE,function(e){return t.cycle(e)}),this._addTouchEventListeners()}},{key:"_addTouchEventListeners",value:function(){var i=this;if(this._touchSupported){var t=function(e){i._pointerEvent&&PointerType[e.originalEvent.pointerType.toUpperCase()]?i.touchStartX=e.originalEvent.clientX:i._pointerEvent||(i.touchStartX=e.originalEvent.touches[0].clientX)},n=function(e){i._pointerEvent&&PointerType[e.originalEvent.pointerType.toUpperCase()]&&(i.touchDeltaX=e.originalEvent.clientX-i.touchStartX),i._handleSwipe(),"hover"===i._config.pause&&(i.pause(),i.touchTimeout&&clearTimeout(i.touchTimeout),i.touchTimeout=setTimeout(function(e){return i.cycle(e)},TOUCHEVENT_COMPAT_WAIT+i._config.interval))};(0,_jquery.default)(this._element.querySelectorAll(Selector.ITEM_IMG)).on(Event.DRAG_START,function(e){return e.preventDefault()}),this._pointerEvent?((0,_jquery.default)(this._element).on(Event.POINTERDOWN,function(e){return t(e)}),(0,_jquery.default)(this._element).on(Event.POINTERUP,function(e){return n(e)}),this._element.classList.add(ClassName.POINTER_EVENT)):((0,_jquery.default)(this._element).on(Event.TOUCHSTART,function(e){return t(e)}),(0,_jquery.default)(this._element).on(Event.TOUCHMOVE,function(e){var t;(t=e).originalEvent.touches&&1<t.originalEvent.touches.length?i.touchDeltaX=0:i.touchDeltaX=t.originalEvent.touches[0].clientX-i.touchStartX}),(0,_jquery.default)(this._element).on(Event.TOUCHEND,function(e){return n(e)}))}}},{key:"_keydown",value:function(e){if(!/input|textarea/i.test(e.target.tagName))switch(e.which){case ARROW_LEFT_KEYCODE:e.preventDefault(),this.prev();break;case ARROW_RIGHT_KEYCODE:e.preventDefault(),this.next()}}},{key:"_getItemIndex",value:function(e){return this._items=e&&e.parentNode?[].slice.call(e.parentNode.querySelectorAll(Selector.ITEM)):[],this._items.indexOf(e)}},{key:"_getItemByDirection",value:function(e,t){var i=e===Direction.NEXT,n=e===Direction.PREV,r=this._getItemIndex(t),a=this._items.length-1;if((n&&0===r||i&&r===a)&&!this._config.wrap)return t;var l=(r+(e===Direction.PREV?-1:1))%this._items.length;return-1===l?this._items[this._items.length-1]:this._items[l]}},{key:"_triggerSlideEvent",value:function(e,t){var i=this._getItemIndex(e),n=this._getItemIndex(this._element.querySelector(Selector.ACTIVE_ITEM)),r=_jquery.default.Event(Event.SLIDE,{relatedTarget:e,direction:t,from:n,to:i});return(0,_jquery.default)(this._element).trigger(r),r}},{key:"_setActiveIndicatorElement",value:function(e){if(this._indicatorsElement){var t=[].slice.call(this._indicatorsElement.querySelectorAll(Selector.ACTIVE));(0,_jquery.default)(t).removeClass(ClassName.ACTIVE);var i=this._indicatorsElement.children[this._getItemIndex(e)];i&&(0,_jquery.default)(i).addClass(ClassName.ACTIVE)}}},{key:"_slide",value:function(e,t){var i,n,r,a=this,l=this._element.querySelector(Selector.ACTIVE_ITEM),o=this._getItemIndex(l),u=t||l&&this._getItemByDirection(e,l),s=this._getItemIndex(u),c=Boolean(this._interval);if(r=e===Direction.NEXT?(i=ClassName.LEFT,n=ClassName.NEXT,Direction.LEFT):(i=ClassName.RIGHT,n=ClassName.PREV,Direction.RIGHT),u&&(0,_jquery.default)(u).hasClass(ClassName.ACTIVE))this._isSliding=!1;else if(!this._triggerSlideEvent(u,r).isDefaultPrevented()&&l&&u){this._isSliding=!0,c&&this.pause(),this._setActiveIndicatorElement(u);var _=_jquery.default.Event(Event.SLID,{relatedTarget:u,direction:r,from:o,to:s});if((0,_jquery.default)(this._element).hasClass(ClassName.SLIDE)){(0,_jquery.default)(u).addClass(n),_util.default.reflow(u),(0,_jquery.default)(l).addClass(i),(0,_jquery.default)(u).addClass(i);var E=parseInt(u.getAttribute("data-interval"),10);this._config.interval=E?(this._config.defaultInterval=this._config.defaultInterval||this._config.interval,E):this._config.defaultInterval||this._config.interval;var f=_util.default.getTransitionDurationFromElement(l);(0,_jquery.default)(l).one(_util.default.TRANSITION_END,function(){(0,_jquery.default)(u).removeClass("".concat(i," ").concat(n)).addClass(ClassName.ACTIVE),(0,_jquery.default)(l).removeClass("".concat(ClassName.ACTIVE," ").concat(n," ").concat(i)),a._isSliding=!1,setTimeout(function(){return(0,_jquery.default)(a._element).trigger(_)},0)}).emulateTransitionEnd(f)}else(0,_jquery.default)(l).removeClass(ClassName.ACTIVE),(0,_jquery.default)(u).addClass(ClassName.ACTIVE),this._isSliding=!1,(0,_jquery.default)(this._element).trigger(_);c&&this.cycle()}}}],[{key:"_jQueryInterface",value:function(n){return this.each(function(){var e=(0,_jquery.default)(this).data(DATA_KEY),t=_objectSpread({},Default,(0,_jquery.default)(this).data());"object"===_typeof(n)&&(t=_objectSpread({},t,n));var i="string"==typeof n?n:t.slide;if(e||(e=new a(this,t),(0,_jquery.default)(this).data(DATA_KEY,e)),"number"==typeof n)e.to(n);else if("string"==typeof i){if(void 0===e[i])throw new TypeError('No method named "'.concat(i,'"'));e[i]()}else t.interval&&(e.pause(),e.cycle())})}},{key:"_dataApiClickHandler",value:function(e){var t=_util.default.getSelectorFromElement(this);if(t){var i=(0,_jquery.default)(t)[0];if(i&&(0,_jquery.default)(i).hasClass(ClassName.CAROUSEL)){var n=_objectSpread({},(0,_jquery.default)(i).data(),(0,_jquery.default)(this).data()),r=this.getAttribute("data-slide-to");r&&(n.interval=!1),a._jQueryInterface.call((0,_jquery.default)(i),n),r&&(0,_jquery.default)(i).data(DATA_KEY).to(r),e.preventDefault()}}}},{key:"VERSION",get:function(){return VERSION}},{key:"Default",get:function(){return Default}}]),a}();(0,_jquery.default)(document).on(Event.CLICK_DATA_API,Selector.DATA_SLIDE,Carousel._dataApiClickHandler),(0,_jquery.default)(window).on(Event.LOAD_DATA_API,function(){for(var e=[].slice.call(document.querySelectorAll(Selector.DATA_RIDE)),t=0,i=e.length;t<i;t++){var n=(0,_jquery.default)(e[t]);Carousel._jQueryInterface.call(n,n.data())}}),_jquery.default.fn[NAME]=Carousel._jQueryInterface,_jquery.default.fn[NAME].Constructor=Carousel,_jquery.default.fn[NAME].noConflict=function(){return _jquery.default.fn[NAME]=JQUERY_NO_CONFLICT,Carousel._jQueryInterface};var _default=Carousel;exports.default=_default;
//# sourceMappingURL=data:application/json;charset=utf8;base64,
